/* eslint-env node */
/* eslint-disable no-console */
// NOTE: This file is run pre build and creates files needed to build the static site.
const klawSync = require('klaw-sync');
const path = require('path');

const getComponentMetadata = require('./get-component-metadata');
const handleKlawError = require('./handle-klaw-error');
const writeFile = require('./write-file');

const pagesDirectory = path.join(
  __dirname,
  '..',
  'source',
  'static-site',
  'pages'
);

const disclaimers = [
  '// NOTE: Do not edit this file. It is built by running `./scripts/create-static-site-files.js`'
].join('\n');

try {
  const pages = klawSync(pagesDirectory, {
    filter: item => path.basename(item.path)[0] !== '.'
  }).reduce((accumulator, { path: filePath }) => {
    const metadata = getComponentMetadata(filePath);
    return accumulator.concat(Object.keys(metadata).length > 0 ? metadata : []);
  }, []);

  const importStatements = pages.reduce(
    (accumulator, { componentName, folderName }) =>
      accumulator +
      `import ${componentName} from './${folderName.replace(/\\/g, '/')}';\n`,
    ''
  );

  const exportContent = pages.reduce(
    (accumulator, page) =>
      accumulator.concat(
        `{
        component: ${page.componentName},
        group: '${page.group}',
        name: '${page.name}',
        path: '${page.path}'
      }`
      ),
    []
  );

  const pagesExport = `export default [\n${exportContent.join(',\n')}];`;
  const pagesFileContent = `${disclaimers}\n\n${importStatements}\n${pagesExport}\n`;

  const pathsExport = pages.map(page => `'${page.path}'`).join(',\n');
  const pathsFileContent = `${disclaimers}\n\nmodule.exports = [\n${pathsExport}\n]`;

  writeFile(path.join(pagesDirectory, 'pages.js'), pagesFileContent);
  writeFile(path.join(pagesDirectory, 'paths.js'), pathsFileContent);
} catch (error) {
  handleKlawError(error, pagesDirectory);
}
