/* eslint-env node */
/* eslint-disable no-console */
// NOTE: This file is run pre build and creates files needed to build the static site.
const klaw = require('klaw');
const path = require('path');

const getComponentMetadata = require('./get-component-metadata');
const handleKlawError = require('./handle-klaw-error');
const writeFile = require('./write-file');

const pagesDirectory = path.join(
  __dirname,
  '..',
  'source',
  'static-site',
  'pages'
);

const disclaimers = [
  '// NOTE: Do not edit this file. It is built by running `./build/create-static-site-files.js`',
  `// NOTE: Generated at ${new Date().toISOString()}`
].join('\n');

const pages = [];

klaw(pagesDirectory, { filter: item => path.basename(item)[0] !== '.' })
  .on('readable', function() {
    let item;
    while ((item = this.read())) {
      const {
        componentName,
        folderName,
        group,
        humanReadableName,
        path
      } = getComponentMetadata(item);

      if (componentName && folderName) {
        pages.push({
          component: componentName,
          group,
          humanReadableName,
          importFrom: './' + folderName,
          path
        });
      }
    }
  })
  .on('error', handleKlawError)
  .on('end', () => {
    const importStatements = pages.reduce((accumulator, page) => {
      accumulator += `import ${page.component} from '${page.importFrom}';\n`;
      return accumulator;
    }, '');

    const exportContent = pages.reduce((accumulator, page, index) => {
      const separator = index < pages.length - 1 ? ',' : '';

      accumulator += `{
        component: ${page.component},
        path: '${page.path}'
      }${separator}\n`;

      return accumulator;
    }, '');

    const exportStatement = `export default [\n${exportContent}];`;

    const fileContent = `${disclaimers}\n${importStatements.replace(
      /\\/g,
      '/'
    )}\n${exportStatement}\n`;

    writeFile(
      ['..', 'source', 'static-site', 'pages', 'pages.js'],
      fileContent
    );

    writeFile(
      ['..', 'source', 'static-site', 'pages', 'paths.js'],
      `${disclaimers}\n${`module.exports = [${pages.map(
        page => `'${page.path}'`
      )}]`.replace(',]', ']')}`
    );
  });
